{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eliezer Muller\\\\Desktop\\\\FinalProject\\\\client\\\\src\\\\SubscriptionsPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MemberComp from './Member';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SubscriptionsPageComp(props) {\n  _s();\n\n  const [members, setMembers] = useState([]);\n  useEffect(() => {\n    async function allMembers() {\n      let resp = await axios.get(\"http://localhost:8000/api/members\");\n      let members = resp.data; //Juste the first time or if there is not members in the DB, push the members in the DB \n\n      let allMembers = [];\n      members.forEach(member => {\n        let Id = member._id;\n        let Name = member.Name;\n        let Email = member.Email;\n        let City = member.City;\n        let obj = {\n          Id,\n          Name,\n          Email,\n          City\n        };\n        allMembers.push(obj);\n      });\n      setMembers(allMembers);\n    }\n\n    allMembers();\n  }, [members]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subscriptions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Add Member\",\n      onClick: e => {\n        props.history.push(\"/AddMember/\" + props.match.params.userId);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 128\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 134\n    }, this), members.map((membre, index) => {\n      return /*#__PURE__*/_jsxDEV(MemberComp, {\n        member: membre,\n        userId: props.match.params.userId\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SubscriptionsPageComp, \"oAU6TfHvunT8vnVPYsgfJ1fAmok=\");\n\n_c = SubscriptionsPageComp;\nexport default SubscriptionsPageComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubscriptionsPageComp\");","map":{"version":3,"sources":["C:/Users/Eliezer Muller/Desktop/FinalProject/client/src/SubscriptionsPage.js"],"names":["useEffect","useState","axios","MemberComp","SubscriptionsPageComp","props","members","setMembers","allMembers","resp","get","data","forEach","member","Id","_id","Name","Email","City","obj","push","e","history","match","params","userId","map","membre","index"],"mappings":";;;AAEA,SAAQA,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,UAAvB;;;AAGA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA;;AAErC,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBN,QAAQ,CAAC,EAAD,CAArC;AAECD,EAAAA,SAAS,CAAC,MACV;AAEE,mBAAeQ,UAAf,GAEA;AAEA,UAAIC,IAAI,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,mCAAV,CAAjB;AACA,UAAIJ,OAAO,GAAGG,IAAI,CAACE,IAAnB,CAHA,CAMC;;AAGA,UAAIH,UAAU,GAAE,EAAhB;AAEAF,MAAAA,OAAO,CAACM,OAAR,CAAgBC,MAAM,IAAE;AAExB,YAAIC,EAAE,GAAGD,MAAM,CAACE,GAAhB;AACA,YAAIC,IAAI,GAAGH,MAAM,CAACG,IAAlB;AACA,YAAIC,KAAK,GAAGJ,MAAM,CAACI,KAAnB;AACA,YAAIC,IAAI,GAAGL,MAAM,CAACK,IAAlB;AAEA,YAAIC,GAAG,GAAE;AAACL,UAAAA,EAAD;AAAIE,UAAAA,IAAJ;AAASC,UAAAA,KAAT;AAAeC,UAAAA;AAAf,SAAT;AAEAV,QAAAA,UAAU,CAACY,IAAX,CAAgBD,GAAhB;AAGD,OAZC;AAcCZ,MAAAA,UAAU,CAACC,UAAD,CAAV;AAGD;;AAEDA,IAAAA,UAAU;AAEX,GArCQ,EAqCP,CAACF,OAAD,CArCO,CAAT;AAyCA,sBAEE;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAO,MAAA,IAAI,EAAG,QAAd;AAAuB,MAAA,KAAK,EAAE,YAA9B;AAA2C,MAAA,OAAO,EAAEe,CAAC,IAAE;AAAChB,QAAAA,KAAK,CAACiB,OAAN,CAAcF,IAAd,CAAmB,gBAAef,KAAK,CAACkB,KAAN,CAAYC,MAAZ,CAAmBC,MAArD;AAA6D;AAArH;AAAA;AAAA;AAAA;AAAA,YAJF,oBAI2H;AAAA;AAAA;AAAA;AAAA,YAJ3H,oBAIiI;AAAA;AAAA;AAAA;AAAA,YAJjI,EAUGnB,OAAO,CAACoB,GAAR,CAAY,CAACC,MAAD,EAAQC,KAAR,KAEV;AAEE,0BAAO,QAAC,UAAD;AAAyB,QAAA,MAAM,EAAID,MAAnC;AAA2C,QAAA,MAAM,EAAEtB,KAAK,CAACkB,KAAN,CAAYC,MAAZ,CAAmBC;AAAtE,SAAkBG,KAAlB;AAAA;AAAA;AAAA;AAAA,cAAP;AAED,KANH,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AA2BD;;GAxEQxB,qB;;KAAAA,qB;AA0ET,eAAeA,qBAAf","sourcesContent":["\r\n\r\nimport {useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\nimport MemberComp from './Member'\r\n\r\n\r\nfunction SubscriptionsPageComp(props) {\r\n\r\n const [members,setMembers] = useState([])\r\n\r\n  useEffect(()=>\r\n  {\r\n\r\n    async function allMembers ()\r\n    \r\n    {\r\n\r\n    let resp = await axios.get(\"http://localhost:8000/api/members\")\r\n    let members = resp.data\r\n\r\n\r\n     //Juste the first time or if there is not members in the DB, push the members in the DB \r\n\r\n    \r\n     let allMembers =[]\r\n\r\n     members.forEach(member=>{\r\n\r\n     let Id = member._id\r\n     let Name = member.Name\r\n     let Email = member.Email\r\n     let City = member.City\r\n\r\n     let obj ={Id,Name,Email,City}\r\n\r\n     allMembers.push(obj)\r\n\r\n\r\n   })\r\n\r\n      setMembers(allMembers)\r\n\r\n     \r\n    } \r\n    \r\n    allMembers() \r\n  \r\n  },[members])\r\n\r\n\r\n    \r\n  return (\r\n\r\n    <div>\r\n\r\n      <h2>Subscriptions</h2>\r\n\r\n      <input type = \"button\" value= \"Add Member\" onClick={e=>{props.history.push(\"/AddMember/\"+ props.match.params.userId)}}/> <br/> <br/>\r\n\r\n\r\n      {\r\n\r\n\r\n       members.map((membre,index)=>\r\n \r\n         {\r\n  \r\n           return <MemberComp key ={index} member = {membre} userId={props.match.params.userId}/>\r\n\r\n         })\r\n\r\n\r\n      }\r\n      \r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default SubscriptionsPageComp;\r\n"]},"metadata":{},"sourceType":"module"}